- id: '1587105668090'
  alias: Light off - Plex
  description: Desk Lamp turns off when Plex plays media on MBP
  trigger:
  - platform: template
    value_template: '{{ is_state(''media_player.plex_plex_web_safari_osx'', ''playing'')
      }}'
  - platform: template
    value_template: '{{ is_state(''media_player.plex_plex_media_player_agneevs_macbook_pro'',
      ''playing'') }}'
  condition:
  - condition: state
    entity_id: light.desk_light
    state: 'on'
  action:
  - data: {}
    entity_id: light.desk_light
    service: light.turn_off
  - entity_id: switch.lofi_beats,switch.lofi_beats2,switch.jazz_radio
    service: switch.turn_off
  - entity_id: input_boolean.desklamp_bool
    service: input_boolean.turn_on
  mode: single
- id: '1587105718577'
  alias: Light on - Plex
  description: Desk Lamp turns on when Plex stops playing
  trigger:
  - platform: template
    value_template: '{{ not is_state(''media_player.plex_plex_web_safari_osx'', ''playing'')
      }}'
  condition:
  - condition: state
    entity_id: input_boolean.desklamp_bool
    state: 'on'
  action:
  - data: {}
    entity_id: light.desk_light
    service: light.turn_on
  - data: {}
    entity_id: input_boolean.desklamp_bool
    service: input_boolean.turn_off
  mode: single
- id: '1587992031900'
  alias: Alert if servers throttle
  description: ''
  trigger:
  - entity_id: sensor.throttled_state
    from: '0x0'
    platform: state
  - entity_id: sensor.server_2_throttled_state
    from: '0x0'
    platform: state
  condition: []
  action:
  - data_template:
      message: '`{{ trigger.entity_id }}` has throttled to `{{ trigger.to_state }}`'
      title: '*Home Assistant*'
    service: notify.telegram
- id: '1588240541307'
  alias: Turn off certain switches
  description: ''
  trigger:
  - entity_id:
    - switch.refresh_plex
    platform: state
    to: 'on'
  condition: []
  action:
  - delay: 00:00:05
  - data_template:
      entity_id: '{{ trigger.entity_id }}'
    service: switch.turn_off
  mode: single
- id: 1e959b5f825c4f71bc72792f183123fa
  alias: Light theme after reboot in day
  trigger:
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - data: {}
    entity_id: switch.theme_dark
    service: switch.turn_off
  - data: {}
    entity_id: input_boolean.frontgatecamera_bool
    service: input_boolean.turn_off
  mode: single
- id: 8e6525ab98764dfd8d945ee58533462e
  alias: Dark theme after reboot in night
  trigger:
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data: {}
    entity_id: switch.theme_dark
    service: switch.turn_on
  - data: {}
    entity_id: input_boolean.frontgatecamera_bool
    service: input_boolean.turn_on
  mode: single
- id: '1593856750074'
  alias: Light theme
  description: ''
  trigger:
  - event: start
    platform: homeassistant
  condition:
  - before: sunset
    condition: sun
  action:
  - data: {}
    entity_id: switch.theme_dark
    service: switch.turn_off
  - data: {}
    entity_id: input_boolean.frontgatecamera_bool
    service: input_boolean.turn_off
  mode: single
- id: '1593856822416'
  alias: Dark theme at sunset
  description: ''
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - data: {}
    entity_id: switch.theme_dark
    service: switch.turn_on
  - data: {}
    entity_id: input_boolean.frontgatecamera_bool
    service: input_boolean.turn_on
  mode: single
- id: '1598180996359'
  alias: Notify me of tomorrow's weather forecast
  description: ''
  trigger:
  - at: '21:00:00'
    platform: time
  condition: []
  action:
  - data:
      message: Expect {{ state_attr("weather.accuweather", "forecast")[0].condition
        }} tomorrow, with a high of {{ state_attr("weather.accuweather","forecast")[0].temperature
        }}°C
      title: Tomorrow's Weather Forecast
    service: notify.mobile_app_agneevs_iphone_x
  mode: single
- id: '1599557332533'
  alias: Notify when Sonarr starts importing
  description: ''
  trigger:
  - platform: template
    value_template: "{% if is_state_attr('sensor.sonarr_commands', 'ProcessMonitoredDownloads',\
      \ 'started') %}\n  true\n{% endif %}\n"
  condition: []
  action:
  - data:
      disable_notification: true
      message: Sonarr has started importing!
      title: '*Home Assistant*'
    service: telegram_bot.send_message
  mode: single
- id: '1600016704503'
  alias: Turn off TV lamp if a specific TV is on
  description: ''
  trigger:
  - entity_id: light.tv_lamp
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: device_tracker.sony_bravia
    state: home
  action:
  - data: {}
    entity_id: light.tv_lamp
    service: light.turn_off
  mode: single
- id: '1600174827470'
  alias: Clean Hass.io DB
  description: ''
  trigger:
  - at: '22:30:00'
    platform: time
  condition:
  - condition: time
    weekday:
    - sun
    - wed
  action:
  - data:
      keep_days: 14
    service: recorder.purge
  - data:
      disable_notification: true
      message: ✅ Database successfully purged!
      title: '*Home Assistant*'
    service: telegram_bot.send_message
  mode: single
