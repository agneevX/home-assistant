- platform: systemmonitor
  scan_interval: 7
  resources:
    - type: throughput_network_in
      arg: eth0
    - type: throughput_network_out
      arg: eth0

# Command line sensors

- platform: command_line
  name: Router daily WAN usage
  command: "/bin/bash /config/scripts/orbi_router.sh wan_daily"
  scan_interval: 180
  value_template: "{{ value_json.id }}"
  json_attributes:
    - rx
    - tx

- platform: command_line
  name: Netgear Orbi
  command: "/bin/bash /config/scripts/orbi_router.sh"
  value_template: "{{ (value_json.status) }}"
  scan_interval: 40
  json_attributes:
    - Uptime
    - WAN Uptime
    - WAN Port
    - LAN Port 1
    - LAN Port 2
    - LAN Port 3

- platform: command_line
  name: /drive State
  command: "/bin/bash /config/scripts/multiple_actions.sh drive_state"

- platform: command_line
  name: Speedtest.net download speed
  command: "curl -s 'http://10.0.0.10:8700/api/speedtest/latest'"
  unit_of_measurement: 'Mb/s'
  value_template: >-
    {% if value_json.data.download|int < 0.1 %} NaN
    {% else %} {{ value_json.data.download|float|round(2) }}
    {% endif %}

- platform: command_line
  name: Speedtest.net upload speed
  command: "curl -s 'http://10.0.0.10:8700/api/speedtest/latest'"
  unit_of_measurement: 'Mb/s'
  value_template: >-
    {% if value_json.data.upload|int < 0.1 %} NaN
    {% else %} {{ value_json.data.upload|float|round(2) }}
    {% endif %}

- platform: command_line
  name: eth0 In (total)
  command: "/bin/bash /config/scripts/multiple_actions.sh vnstat_daily_receive"
  value_template: "{{ (value_json|float/(1000*1000))|round }}"
  scan_interval: 180

- platform: command_line
  name: eth0 Out (total)
  command: "/bin/bash /config/scripts/multiple_actions.sh vnstat_daily_sent"
  value_template: "{{ (value_json|float/(1000*1000))|round }}"
  scan_interval: 180

# Template sensors

- platform: template
  sensors:

    wan_daily_usage_up:
      friendly_name: WAN daily usage (upload)
      value_template: >-
        {% if state_attr('sensor.router_daily_wan_usage','tx') != None %}
          {{ (state_attr('sensor.router_daily_wan_usage','tx')|float/1000)|round }}
        {% else %} NaN {% endif %}
      icon_template: mdi:arrow-down
      unit_of_measurement: 'MB'

    wan_daily_usage_down:
      friendly_name: WAN daily usage (download)
      value_template: >-
        {% if state_attr('sensor.router_daily_wan_usage','rx') != None %}
          {{ (state_attr('sensor.router_daily_wan_usage','rx')|float/1000)|round }}
        {% else %} NaN {% endif %}
      icon_template: mdi:arrow-up
      unit_of_measurement: 'MB'

    eth0_in:
      friendly_name: eth0 In
      value_template: "{{ (states('sensor.network_throughput_in_eth0')|float*8)|round(1) }}"
      unit_of_measurement: 'Mb/s'

    eth0_out:
      friendly_name: eth0 Out
      value_template: "{{ (states('sensor.network_throughput_out_eth0')|float*8)|round(1) }}"
      unit_of_measurement: 'Mb/s'
