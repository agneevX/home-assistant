- platform: command_line
  name: Orbi Router vnstat
  command: "/bin/bash /home/homeassistant/.homeassistant/multiple_actions.sh orbi_vnstat"
  scan_interval: 120
  value_template: "{{ (value_json.id) }}"
  json_attributes:
    - rx
    - tx
- platform: command_line
  name: Orbi Router WAN In
  command: !secret orbi_wan
  scan_interval: 5
  unit_of_measurement: 'Mb/s'
  value_template: "{{ (value_json.rx.bytespersecond|float/125000)|round(1) }}"
  json_attributes:
    - tx
- platform: command_line
  name: Orbi Router
  command: "/bin/bash /home/homeassistant/.homeassistant/orbi_router.sh"
  value_template: "{{ (value_json.status) }}"
  scan_interval: 20
  json_attributes:
    - Uptime
    - System load
    - WAN Uptime
    - WAN Port
    - LAN Port 1
    - LAN Port 2
    - LAN Port 3
    - WAN In (total)
    - WAN Out (total)
- platform: command_line
  name: qBittorrent Alt Limit State
  command: !secret qbt_alt_limit_state
  scan_interval: 10
- platform: command_line
  name: qBittorrent - active torrents
  command: !secret qbt_active_torrents
  unit_of_measurement: 'torrents'
  scan_interval: 20
- platform: command_line
  name: /drive State
  command: "/bin/bash /home/homeassistant/.homeassistant/multiple_actions.sh drive_state"
- platform: command_line
  name: Radarr Queue
  command: !secret radarr_queue
  unit_of_measurement: 'movies'
  value_template: "{{ (value_json.totalRecords) }}"
- platform: command_line
  name: Radarr4K Queue
  command: !secret radarr4k_queue
  unit_of_measurement: 'movies'
  value_template: "{{ (value_json.totalRecords) }}"
- platform: command_line
  name: Speedtest.net Download Speed
  command: "/bin/bash /home/homeassistant/.homeassistant/spdtst.sh"
  command_timeout: 180
  scan_interval: 00:30:00
  unit_of_measurement: 'Mb/s'
  value_template: "{{ (value_json.download.bandwidth|float/125000)|round(1) }}"
  json_attributes:
    - upload
    - server
- platform: command_line
  name: eth0 In (total)
  command: vnstat -i eth0 --json d | jq '.interfaces[] | select(.name=="eth0")' | jq '.traffic.day[]' | grep 'rx' | tail -1 | echo $(tr -dc '0-9')
  value_template: "{{ (value_json|float/(1000*1000))|round }}"
  scan_interval: 180
- platform: command_line
  name: eth0 Out (total)
  command: vnstat -i eth0 --json d | jq '.interfaces[] | select(.name=="eth0")' | jq '.traffic.day[]' | grep 'tx' | tail -1 | echo $(tr -dc '0-9')
  value_template: "{{ (value_json|float/(1000*1000))|round }}"
  scan_interval: 180
