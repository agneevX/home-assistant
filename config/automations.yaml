- id: '1587105668264'
  alias: Set soundbar volume
  trigger:
  - platform: state
    entity_id: input_number.pi_volume
  action:
  - service_template: shell_command.pi_volume_{{ trigger.to_state.state | int }}
  initial_state: true
  mode: single
- id: '1587105668090'
  alias: Light off - Plex
  description: Desk Lamp turns off when Plex plays media on MBP
  trigger:
  - platform: template
    value_template: '{{ is_state(''media_player.plex_plex_web_safari_osx'', ''playing'')
      }}'
  - platform: template
    value_template: '{{ is_state(''media_player.plex_plex_media_player_agneevs_macbook_pro'',
      ''playing'') }}'
  condition:
  - condition: state
    entity_id: light.desk_light
    state: 'on'
  action:
  - data: {}
    entity_id: light.desk_light
    service: light.turn_off
  - entity_id: switch.lofi_beats,switch.lofi_beats2,switch.jazz_radio
    service: switch.turn_off
  - entity_id: input_boolean.desk_light
    service: input_boolean.turn_on
  mode: single
- id: '1587105718577'
  alias: Light on - Plex
  description: Desk Lamp turns on when Plex stops playing
  trigger:
  - platform: template
    value_template: '{{ not is_state(''media_player.plex_plex_web_safari_osx'', ''playing'')
      }}'
  condition:
  - condition: state
    entity_id: input_boolean.desk_light
    state: 'on'
  action:
  - data: {}
    entity_id: light.desk_light
    service: light.turn_on
  - data: {}
    entity_id: input_boolean.desk_light
    service: input_boolean.turn_off
  mode: single
- id: '1587992031900'
  alias: Alert if servers throttle
  description: ''
  trigger:
  - entity_id: sensor.throttled_state
    from: '0x0'
    platform: state
  - entity_id: sensor.server_2_throttled_state
    from: '0x0'
    platform: state
  condition: []
  action:
  - data_template:
      message: '`{{ trigger.entity_id }}` has throttled to `{{ trigger.to_state }}`'
      title: '*Home Assistant*'
    service: notify.telegram
- id: 1e959b5f825c4f71bc72792f183123fa
  alias: Light theme after reboot in day
  trigger:
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - service: frontend.set_theme
    data:
      name: Milky White
  mode: single
- id: 8e6525ab98764dfd8d945ee58533462e
  alias: Dark theme after reboot in night
  trigger:
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: frontend.set_theme
    data:
      name: Kinda Dark
  mode: single
- id: '1593856822416'
  alias: Dark theme (at sunset)
  description: ''
  trigger:
  - platform: time
    at: '18:00:00'
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: Kinda Dark
  mode: single
- id: '1600016704503'
  alias: Turn off TV lamp if a specific TV is on
  description: ''
  trigger:
  - entity_id: light.tv_lamp
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: device_tracker.sony_bravia
    state: home
  action:
  - data: {}
    entity_id: light.tv_lamp
    service: light.turn_off
  mode: single
- id: '1600174827470'
  alias: 'HA: Purge DB'
  description: ''
  trigger:
  - platform: time
    at: '22:30:00'
  condition: []
  action:
  - data:
      keep_days: 14
    service: recorder.purge
  mode: single
- id: '1600689970940'
  alias: Light theme (at sunrise)
  description: ''
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: Milky White
  mode: single
- id: '1601100809199'
  alias: Turn on TV Lamp when TV is on
  description: Turn on TV Lamp when Bedroom TV is turned on, but only after sunset
  trigger:
  - platform: state
    entity_id: media_player.bedroom_tv
    to: 'on'
  condition:
  - condition: sun
    after: sunset
  - condition: state
    entity_id: light.tv_lamp
    state: 'off'
  action:
  - service: light.turn_on
    data: {}
    entity_id: light.tv_lamp
  mode: single
- id: '1602836208889'
  alias: Turn off AC switches when AC switches off
  description: ''
  trigger:
  - platform: state
    entity_id: climate.bedroom_ac
    to: 'off'
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    entity_id:
    - input_boolean.bedroom_ac_jetcool
    - input_boolean.bedroom_ac_swing
  mode: single
